name: saturday

on:
  schedule:
    - cron: '0 0 * * SAT'
  workflow_dispatch:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - arch: x86_64
            compat-distro-version: sid64
    steps:
    - name: Clone woof-CE
      run: git clone -b testing --depth 1 https://github.com/puppylinux-woof-CE/woof-CE ../woof-CE
    - name: Create cache directories
      run: |
        mkdir -p local-repositories petbuild-sources petbuild-cache petbuild-output
        ln -s `pwd`/local-repositories ../local-repositories
    - name: Get cache key timestamp
      id: get_cache_key_timestamp
      run: |
        echo "::set-output name=timestamp::$(/bin/date -u "+%Y%U")"
      shell: bash
    - name: Get cached local-repositories
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: local-repositories
        key: ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-local-repositories-${{ steps.get_cache_key_timestamp.outputs.timestamp }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-local-repositories-${{ steps.get_cache_key_timestamp.outputs.timestamp }}-
    - name: Prepare build environment
      run: |
        [ -f local-repositories/vercmp ] || (curl https://raw.githubusercontent.com/puppylinux-woof-CE/initrd_progs/master/pkg/w_apps_static/w_apps/vercmp.c | gcc -x c -o ../local-repositories/vercmp -)
        sudo install -m 755 local-repositories/vercmp /usr/local/bin/vercmp
        sudo install -D -m 644 ../woof-CE/woof-code/rootfs-skeleton/usr/local/petget/categories.dat /usr/local/petget/categories.dat
        echo "dash dash/sh boolean false" | sudo debconf-set-selections
        sudo DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
        sudo ln -s bash /bin/ash
    - name: merge2out
      timeout-minutes: 5
      run: |
        cd ../woof-CE
        yes "" | sudo -E ./merge2out woof-distro/${{ matrix.arch }}/debian/${{ matrix.compat-distro-version }}
    - name: Set distro version
      run: sudo sed -i s/^DISTRO_VERSION=.*/DISTRO_VERSION=9.9.${{ github.run_number }}/ ../woof-out_*/DISTRO_SPECS
    - name: 0setup
      timeout-minutes: 10
      run: |
        cd ../woof-out_*
        sudo -E ./0setup
    - name: 1download
      timeout-minutes: 120
      run: |
        cd ../woof-out_*
        sudo -E ./1download
    - name: 2createpackages
      timeout-minutes: 30
      run: |
        cd ../woof-out_*
        echo | sudo -E ./2createpackages
    - name: Get cached kernel-kit output
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: puppylinux-woof-CE/woof-CE
        branch: testing
        workflow: kernel-kit.yml
        workflow_conclusion: success
        name: kernel-kit-output-5.15.x-${{ matrix.arch }}
        path: output
    - name: Move cached kernel-kit output
      run: sudo mv output ../woof-out_*/kernel-kit/
    - name: Get cached petbuild-sources
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-sources
        key: ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-sources-${{ steps.get_cache_key_timestamp.outputs.timestamp }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-sources-${{ steps.get_cache_key_timestamp.outputs.timestamp }}-
    - name: Get cached petbuild-cache
      if: matrix.arch == 'arm' && github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-cache
        key: ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-cache-${{ steps.get_cache_key_timestamp.outputs.timestamp }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-cache-${{ steps.get_cache_key_timestamp.outputs.timestamp }}-
    - name: Get cached petbuild-output
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-output
        key: ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-output-${{ steps.get_cache_key_timestamp.outputs.timestamp }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-output-${{ steps.get_cache_key_timestamp.outputs.timestamp }}-
    - name: Install 3builddistro dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends patchelf extlinux debootstrap
    - name: 3builddistro
      timeout-minutes: 180
      run: |
        sudo chown -R root:root petbuild-output
        sudo mv petbuild-{sources,cache,output} ../woof-out_*/
        cd ../woof-out_*
        sudo -E HOME=/root XDG_CONFIG_HOME=/root/.config BUILD_ISO=no FRUGALIFY=yes ./3builddistro release
        for i in woof-output-*/*.img; do sudo gzip -1 $i; done
        sudo mv -vf woof-output-*/*.{img.gz,tar} $GITHUB_WORKSPACE/
        sudo mv petbuild-{sources,cache,output} $GITHUB_WORKSPACE/
        sudo unsquashfs -d kernel_sources kernel-kit/output/kernel_sources-5.15-kernel-kit.sfs
        sudo rm -f kernel-kit/output/kernel_sources-5.15-kernel-kit.sfs
        sudo unsquashfs -d sandbox3/zdrv sandbox3/build/zdrv_vanilladpup_9.9.${{ github.run_number }}.sfs
        . sandbox3/zdrv/etc/modules/build.conf-*
        sudo mv -f kernel_sources/lib kernel_sources/usr/
        sudo rm -f ../../../src/linux kernel_sources/usr/lib/modules/5.15.0/{build,source}
        sudo ln -s ../../../src/linux kernel_sources/usr/lib/modules/5.15.0/build
        sudo ln -s ../../../src/linux kernel_sources/usr/lib/modules/5.15.0/source
        sudo mksquashfs kernel_sources $GITHUB_WORKSPACE/kernel_sources-5.15-kernel-kit.sfs $COMP
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: vanilladpup-${{ matrix.arch }}-9.9.${{ github.run_number }}
        release_name: vanilladpup-${{ matrix.arch }}-9.9.${{ github.run_number }}
        prerelease: false
    - name: Upload BIOS image
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: vanilladpup-9.9.${{ github.run_number }}-ext4-2gb-bios.img.gz
        asset_name: vanilladpup-9.9.${{ github.run_number }}-ext4-2gb-bios.img.gz
        asset_content_type: application/octet-stream
    - name: Upload UEFI image
      if: matrix.arch == 'x86_64'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: vanilladpup-9.9.${{ github.run_number }}-ext4-2gb-uefi.img.gz
        asset_name: vanilladpup-9.9.${{ github.run_number }}-ext4-2gb-uefi.img.gz
        asset_content_type: application/octet-stream
    - name: Upload update tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: vanilladpup-9.9.${{ github.run_number }}.tar
        asset_name: vanilladpup-9.9.${{ github.run_number }}.tar
        asset_content_type: application/octet-stream
    - name: Upload kernel sources
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kernel_sources-5.15-kernel-kit.sfs
        asset_name: kernel_sources-5.15-kernel-kit.sfs
        asset_content_type: application/octet-stream
    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 2
        delete_tag_pattern: vanilladpup-${{ matrix.arch }}-9.9.
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}