name: 10.0.x

on:
  schedule:
    - cron: '0 0 * * SAT'
  workflow_dispatch:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - arch: x86_64
            compat-distro-version: bookworm64
            variant: dwl
            keep: 3
          - arch: x86_64
            compat-distro-version: bookworm64
            variant: xwayland
            keep: 3
          - arch: x86_64
            compat-distro-version: bookworm64
            variant: xorg
            keep: 3
          - arch: x86
            compat-distro-version: bookworm
            variant: xorg
            keep: 1
    steps:
    - name: Clone woof-CE
      run: git clone -b vanilladpup-10.0.x --depth 1 https://github.com/vanilla-dpup/woof-CE ../woof-CE
    - name: Create cache directories
      run: |
        mkdir -p local-repositories petbuild-sources petbuild-cache petbuild-output
        ln -s `pwd`/local-repositories ../local-repositories
    - name: Get cache key timestamp
      run: |
        echo "timestamp=$(/bin/date -u "+%Y%U")" >> $$GITHUB_ENV
      shell: bash
    - name: Get cached local-repositories
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: local-repositories
        key: ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-local-repositories-${{ env.timestamp }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-local-repositories-${{ env.timestamp }}-
    - name: Prepare build environment
      run: |
        [ -f local-repositories/vercmp ] || (curl https://raw.githubusercontent.com/puppylinux-woof-CE/initrd_progs/master/pkg/w_apps_static/w_apps/vercmp.c | gcc -x c -o ../local-repositories/vercmp -)
        sudo install -m 755 local-repositories/vercmp /usr/local/bin/vercmp
        sudo install -D -m 644 ../woof-CE/woof-code/rootfs-skeleton/usr/local/petget/categories.dat /usr/local/petget/categories.dat
        echo "dash dash/sh boolean false" | sudo debconf-set-selections
        sudo DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
        sudo ln -s bash /bin/ash
    - name: merge2out
      timeout-minutes: 5
      run: |
        cd ../woof-CE
        yes "" | sudo -E ./merge2out woof-distro/${{ matrix.arch }}/debian/${{ matrix.compat-distro-version }}
        sudo chown -R root:root ../woof-out_*
    - name: Set distro name and version
      run: sudo sed -i -e 's/^DISTRO_NAME=.*/DISTRO_NAME="Vanilla Dpup"/' -e s/^DISTRO_FILE_PREFIX=.*/DISTRO_FILE_PREFIX=vanilladpup/ -e s/^DISTRO_VERSION=.*/DISTRO_VERSION=10.0.${{ github.run_number }}/ ../woof-out_*/DISTRO_SPECS
    - name: 0setup
      timeout-minutes: 10
      run: |
        cd ../woof-out_*
        sudo -E DISTRO_VARIANT=${{ matrix.variant }} ./0setup
    - name: 1download
      timeout-minutes: 120
      run: |
        cd ../woof-out_*
        sudo -E DISTRO_VARIANT=${{ matrix.variant }} ./1download
    - name: 2createpackages
      timeout-minutes: 30
      run: |
        cd ../woof-out_*
        echo | sudo -E DISTRO_VARIANT=${{ matrix.variant }} ./2createpackages
    - name: Get cached kernel-kit output
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: puppylinux-woof-CE/woof-CE
        branch: testing
        workflow: dpup-kernel.yml
        workflow_conclusion: success
        name: kernel-kit-output-usrmerge-overlay-debian-bookworm-${{ matrix.arch }}
        path: output
    - name: Move cached kernel-kit output
      run: sudo mv output ../woof-out_*/kernel-kit/
    - name: Get cached petbuild-sources
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-sources
        key: ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-sources-${{ env.timestamp }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-sources-${{ env.timestamp }}-
    - name: Get cached petbuild-cache
      if: matrix.arch == 'arm' && github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-cache
        key: ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-cache-${{ env.timestamp }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-cache-${{ env.timestamp }}-
    - name: Get cached petbuild-output
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-output
        key: ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-output-${{ env.timestamp }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.arch }}-debian-${{ matrix.compat-distro-version }}-petbuild-output-${{ env.timestamp }}-
    - name: Install 3builddistro dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends patchelf dc debootstrap
    - name: Install cdrtools
      run: |
        [ -f local-repositories/mkisofs ] || (curl -L https://sourceforge.net/projects/cdrtools/files/alpha/cdrtools-3.02a09.tar.bz2/download | tar -xjf- && cd cdrtools-3.02 && make -j`nproc` && mv mkisofs/OBJ/x86_64-linux-cc/mkisofs ../local-repositories/mkisofs)
        sudo install -m 755 local-repositories/mkisofs /usr/local/bin/mkisofs
    - name: 3builddistro
      timeout-minutes: 180
      run: |
        sudo chown -R root:root petbuild-output
        sudo mv petbuild-{sources,cache,output} ../woof-out_*/
        cd ../woof-out_*
        sudo -E HOME=/root XDG_CONFIG_HOME=/root/.config DISTRO_VARIANT=${{ matrix.variant }} ./3builddistro release
        sudo mv -vf woof-output-*/*.iso $GITHUB_WORKSPACE/
        sudo mv petbuild-{sources,cache,output} $GITHUB_WORKSPACE/
        sudo mv kernel-kit/output/kernel_sources-*.sfs woof-output-*/
        cd woof-output-*
        sudo tar -f $GITHUB_WORKSPACE/vanilladpup-10.0.${{ github.run_number }}-extra.tar -c docx_vanilladpup_10.0.${{ github.run_number }}.sfs nlsx_vanilladpup_10.0.${{ github.run_number }}.sfs kernel_sources-*.sfs
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: vanilladpup-${{ matrix.arch }}-10.0.${{ github.run_number }}-${{ matrix.variant }}
        tag_name: vanilladpup-${{ matrix.arch }}-10.0.${{ github.run_number }}-${{ matrix.variant }}
        fail_on_unmatched_files: true
        files: |
          vanilladpup-10.0.${{ github.run_number }}.iso
          vanilladpup-10.0.${{ github.run_number }}-extra.tar
    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: ${{ matrix.keep }}
        delete_tag_pattern: vanilladpup-${{ matrix.arch }}-10.0.
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}